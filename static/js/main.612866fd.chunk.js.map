{"version":3,"sources":["Components/Home.js","Components/About.js","Components/Edit.js","Components/Question.js","Components/New.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","Component","About","Edit","props","state","error","isLoaded","items","x","language","this","match","params","id","console","log","fetch","then","res","json","result","setState","newState","message","action","method","question","type","name","placeholder","required","hint","answer","url","value","Question","nextQuestion","length","previousQuestion","current","item","onClick","_id","target","rel","href","New","App","exact","path","component","render","route","Boolean","window","location","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.612866fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Link className=\"button\" to={\"/HTML\"}>\n          HTML\n        </Link>\n        <Link className=\"button\" to={\"/CSS\"}>\n          CSS\n        </Link>\n        <Link className=\"button\" to={\"/JavaScript\"}>\n          JavaScript\n        </Link>\n        <Link className=\"button\" to={\"/Express\"}>\n          Express\n        </Link>\n        <Link className=\"button\" to={\"/React\"}>\n          React\n        </Link>\n        <Link className=\"button\" to={\"/Node\"}>\n          Node\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./About.css\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"About\">\n          <h1>About Us // Read Me</h1>\n          <div className=\"answers\">\n            <h2>Description:</h2>\n            <p>\n              DevQ is a study platform for Software Engineers. Users can choose\n              from a variety of languages to study, where they will then be\n              prompted with a question, an input section to note their answer, a\n              hint, an answer, and a link to further documentation. Further,\n              users can add their own questions to existing languages, edit\n              questions, and delete questions.\n            </p>\n            <h2>Current Features:</h2>\n            <p>\n              Starting with the DevQ navigation, users can route to the home\n              page clicking on \"DevQ\", to the add new question page with \"Q+\",\n              and the about page with \"About\". The body consists of links to\n              various categories of questions, which will then take users to the\n              question page; the question page will dynamically fill with\n              questions matching that type, with an input to note their answer,\n              a hint, an answer, and a link to an addtional resource for\n              continued reading. On this page, users can choose to edit the\n              question, which will direct them to the edit page; on the edit\n              page, users will then re-enter the information for the question\n              with any edits they wish to make, with the option to delete the\n              question altogether. To creat new questions, users can click on\n              the \"Q+\", which will direct them to the new question page. On this\n              page, users will enter the question, hint, answer, a link to\n              additional resources, and question type, with all inputs being\n              required. Submitting the question will push them to the database,\n              where they will then be requested and displayed in their\n              respective category types when the user goes back to questions.\n            </p>\n            <h2>Features In Progress:</h2>\n            <p>\n              Features in progress include adding a customizeable timer to each\n              question, adding a toggle feature to hide and display hints and\n              answers, and the ability to edit questions without requiring users\n              to re-enter the question data.\n            </p>\n            <h2>Technologies Used:</h2>\n            <ul>\n              <li>HTML</li>\n              <li>CSS</li>\n              <li>JavaScript</li>\n              <li>React</li>\n              <li>Express</li>\n              <li>Node</li>\n              <li>Mongoose</li>\n              <li>Heroku</li>\n              <li>GitHub</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport \"./Edit.css\";\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      x: 0\n    };\n  }\n\n  componentDidMount() {\n    let language = this.props.match.params.id;\n    console.log(this.props);\n    fetch(`https://immense-citadel-86220.herokuapp.com/edit/${language}`)\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState(\n            {\n              isLoaded: true,\n              items: result,\n              x: 0\n            },\n            newState => console.log(this.state, newState)\n          );\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error && items) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <div className=\"editContainer\">\n            <h1>Edit Question</h1>\n            <p>Don't forget to rewrite all input fields &#9786;</p>\n            <div className=\"edit\">\n              <form\n                action={`https://immense-citadel-86220.herokuapp.com/edit/${this.props.match.params.id}?_method=put`}\n                method=\"POST\"\n              >\n                <p>\n                  <h2>Question:</h2>\n                  <p>{items.question}</p>\n                  <input\n                    className=\"editPage\"\n                    type=\"text\"\n                    name=\"question\"\n                    placeholder={items.question}\n                    required\n                  />\n                </p>\n                <p>\n                  <h2>Hint: </h2>\n                  <p>{items.hint}</p>\n                  <input\n                    className=\"editPage\"\n                    type=\"text\"\n                    name=\"hint\"\n                    placeholder={items.hint}\n                    required\n                  />\n                </p>\n                <p>\n                  <h2>Answer: </h2>\n                  <p>{items.answer}</p>\n                  <input\n                    className=\"editPage\"\n                    type=\"text\"\n                    name=\"answer\"\n                    placeholder={items.answer}\n                    required\n                  />\n                </p>\n                <p>\n                  <h2>URL: </h2>\n                  <p>{items.url}</p>\n                  <input\n                    className=\"editPage\"\n                    type=\"text\"\n                    name=\"url\"\n                    placeholder={items.url}\n                    required\n                  />\n                </p>\n                <p>\n                  <h2>Type: </h2>\n                  <select className=\"editPage\" type=\"text\" name=\"type\">\n                    <option name=\"type\" value=\"HTML\">\n                      HTML\n                    </option>\n                    <option name=\"type\" value=\"CSS\">\n                      CSS\n                    </option>\n                    <option name=\"type\" value=\"JavaScript\">\n                      JavaScript\n                    </option>\n                    <option name=\"type\" value=\"React\">\n                      React\n                    </option>\n                    <option name=\"type\" value=\"Express\">\n                      Express\n                    </option>\n                    <option name=\"type\" value=\"Node\">\n                      Node\n                    </option>\n                  </select>\n                </p>\n                <input type=\"submit\" value=\"Update\" />\n              </form>\n            </div>\n            <form\n              action={`https://immense-citadel-86220.herokuapp.com/edit/${this.props.match.params.id}?_method=delete`}\n              method=\"POST\"\n            >\n              <input className=\"delete\" type=\"submit\" value=\"Delete\" />\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nexport default Edit;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Question.css\";\nimport \"./Edit\";\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      x: 0\n    };\n  }\n\n  componentDidMount() {\n    let language = this.props.match.params.question;\n    console.log(language);\n    if (language !== \"DevQ\") {\n      fetch(`https://immense-citadel-86220.herokuapp.com/${language}`)\n        .then(res => res.json())\n        .then(\n          result => {\n            this.setState(\n              {\n                isLoaded: true,\n                items: result,\n                x: 0\n              },\n              newState => console.log(this.state, newState)\n            );\n          },\n          error => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n    }\n    if (language === \"DevQ\") {\n      this.setState({\n        isLoaded: false\n      });\n    }\n  }\n\n  nextQuestion = () => {\n    const { items } = this.state;\n    let current = this.state.x;\n    if (current < items.length - 1) {\n      this.setState({\n        x: this.state.x + 1\n      });\n    }\n  };\n\n  previousQuestion = () => {\n    let current = this.state.x;\n    if (current > 0) {\n      this.setState({\n        x: this.state.x - 1\n      });\n    }\n  };\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error && items) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      let current = this.state.x + 1;\n      let item = items;\n      return (\n        <div>\n          <h1>{item[this.state.x].question}</h1>\n          <p>\n            {current}/{items.length}\n          </p>\n          <input\n            className=\"answer\"\n            type=\"text\"\n            placeholder=\"Write Your Answer Here &rarr; Check Below &darr;\"\n          />\n          <button onClick={this.previousQuestion}>&larr;</button>\n          <button onClick={this.nextQuestion}>&rarr;</button>\n          <Link to={\"/Edit/\" + item[this.state.x]._id}>\n            <button>Edit</button>\n          </Link>\n          <div className=\"answers\">\n            <h2>Hint:</h2>\n            <p>{item[this.state.x].hint}</p>\n            <h2>Answer:</h2>\n            <p>{item[this.state.x].answer}</p>\n            <h2>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={item[this.state.x].url}\n              >\n                [ Documentation ]\n              </a>\n            </h2>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Question;\n","import React, { Component } from \"react\";\nimport \"./New.css\";\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      x: 0\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"editContainer\">\n          <h1>Add a New Question!</h1>\n          <div className=\"edit\">\n            <form\n              action={`https://immense-citadel-86220.herokuapp.com/new`}\n              method=\"POST\"\n            >\n              <p>\n                <h2>Question:</h2>\n                <input\n                  className=\"editPage\"\n                  type=\"text\"\n                  name=\"question\"\n                  required\n                />\n              </p>\n              <p>\n                <h2>Hint: </h2>\n                <input className=\"editPage\" type=\"text\" name=\"hint\" required />\n              </p>\n              <p>\n                <h2>Answer: </h2>\n                <input\n                  className=\"editPage\"\n                  type=\"text\"\n                  name=\"answer\"\n                  required\n                />\n              </p>\n              <p>\n                <h2>Read More URL: </h2>\n                <input className=\"editPage\" type=\"text\" name=\"url\" required />\n              </p>\n              <p>\n                <h2>Type: </h2>\n                <select className=\"editPage\" type=\"text\" name=\"type\">\n                  <option name=\"type\" value=\"HTML\">\n                    HTML\n                  </option>\n                  <option name=\"type\" value=\"CSS\">\n                    CSS\n                  </option>\n                  <option name=\"type\" value=\"JavaScript\">\n                    JavaScript\n                  </option>\n                  <option name=\"type\" value=\"React\">\n                    React\n                  </option>\n                  <option name=\"type\" value=\"Express\">\n                    Express\n                  </option>\n                  <option name=\"type\" value=\"Node\">\n                    Node\n                  </option>\n                </select>\n              </p>\n              <input type=\"submit\" value=\"Post\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default New;\n","import React, { Component } from \"react\";\nimport { Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Components/Home.js\";\nimport About from \"./Components/About.js\";\nimport Question from \"./Components/Question.js\";\nimport Edit from \"./Components/Edit.js\";\nimport New from \"./Components/New.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <Link to=\"/new\">\n              <h1 className=\"link\">[ Q + ]</h1>\n            </Link>\n            <Link to=\"/\">\n              <h1 className=\"link logo\">DevQ</h1>\n            </Link>\n            <Link to=\"/about\">\n              <h1 className=\"link\">[ About ]</h1>\n            </Link>\n          </nav>\n        </header>\n        <main>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/new\" component={New} />\n              <Route path=\"/Edit/:id\" component={Edit} />\n              <Route\n                exact\n                path=\"/:question\"\n                render={route => (\n                  <Question {...route} items={this.state.items} />\n                )}\n              />\n              <Route path=\"/*\" render={() => <Redirect to=\"/\" />} />\n            </Switch>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router basename=\"/DevQ\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}